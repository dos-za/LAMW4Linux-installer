name: CI/CD

on:
  pull_request:
    types:
      - closed

    branches:
      - v0.6.x-test

  release:
    types:
      - created

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install makeself shunit2 xmlstarlet jq

      - name: Run tests
        run: |
          cd ~/work/LAMWManager-linux/LAMWManager-linux/lamw_manager/tests
          bash ./run_tests


  create-release:
    runs-on: ubuntu-latest
    needs: build-and-release
    environment: GH_TOKEN

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GitHub CLI
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token

      - name: Set up Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Get tag
        run: |
          cd ~/work/LAMWManager-linux/LAMWManager-linux
          headers_file=~/work/LAMWManager-linux/LAMWManager-linux/lamw_manager/core/headers/lamw_headers
          version=$(grep "^LAMW_INSTALL_VERSION" $headers_file  | awk -F= '{ print $2 }' | sed 's/"//g')
          echo "v$version" > ~/lamw-tag.txt

      - name: Build setup
        run: |
          cd ~/work/LAMWManager-linux/LAMWManager-linux/lamw_manager/assets
          bash -x ./build-lamw-setup

      - name: Create tag and release
        run: |
          cd ~/work/LAMWManager-linux/LAMWManager-linux/lamw_manager/assets
          version=$(<~/lamw-tag.txt)
          releases_notes_str="$(bash get-releases-notes.sh)"
          echo $version
          git tag -a $version -m "Release $version"
          git push origin $version
          gh release create $version -t "$version" -n "$releases_notes_str" /tmp/lamw_manager_setup.sh
