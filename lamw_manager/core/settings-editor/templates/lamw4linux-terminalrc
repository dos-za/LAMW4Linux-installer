#!/bin/bash

#Run emulator 
emulator(){
	local new_emulator="$ANDROID_SDK_ROOT/emulator/emulator"
	local old_emulator="$ANDROID_SDK_ROOT/tools/emulator"
	
	if [ -e "$new_emulator" ]; then
		$new_emulator $@
	elif [ -e "$old_emulator" ]; then 
		$old_emulator $@
	fi
}

#Run lamw_manager
lamw_manager(){
	if [ ! -e "$LAMW_MANAGER_PATH" ]; then 
		echo 'lamw_manager not found!'
		return 1
	fi
	
	$LAMW_MANAGER_PATH $*
}

DowngradleLazarusLpi(){
	
	local project_version=12

	if [ "$(which fixlp)" = "" ]; then
		echo 'fixlp is not available in your system!!'
		return 1
	fi

	if [ ! -e "$1" ]; then 
		echo "\"$1\" not found!" 
		return 1
	fi


	local -A lazarus_project_nodes=(
		['Version']='/CONFIG/ProjectOptions/Version/@Value'
		['CompatibilityMode']='/CONFIG/ProjectOptions/General/Flags/CompatibilityMode/@Value'
		['Count']='/CONFIG/ProjectOptions/Units/@Count'
	)

	local -A current_lazarus_project=(
		['Version']=0
		['CompatibilityMode']=''
		['Count']=''
	)

	for key in ${!lazarus_project_nodes[@]}; do
		local node=${lazarus_project_nodes[$key]}
		current_lazarus_project[$key]=$(xmlstarlet sel -t -v "$node" "$1")
	done


	if [ "${current_lazarus_project['Version']}" -ge "$project_version" ] ;then
		if [ "${current_lazarus_project['CompatibilityMode']}" = "" ]; then 
			fixlp "$1"
		fi
	elif [ "${current_lazarus_project['Count']}" = "" ]; then 
		 fixlp "$1"
	fi

}


DowngradleAllProjectsFromLAMWWorkspace(){

	[ "$(which fixlp)" = "" ] && return 1

	local backup_pattern='(\/backup)'

	local zenity_text='LAMW Manager v0.4.2 downgraded Lazarus to 2.0.12\n'
	zenity_text+="Do you want to repair lazarus project files (*.lpi) from your $CURRENT_LAMW_WORKSPACE ?\n\n"
	zenity_more_text='About *.lpi file structure change read more at https://wiki.lazarus.freepascal.org/Lazarus_2.2.0_release_notes#LPI.26LPS_project_files:_XML_structure_changed\n'
	
	if tty |grep 'pts/[0-9]' >/dev/null ; then 
		
		if  ! zenity --question \
			--title \
			'Downgrade Lazarus Project' \
			"--text" \
			"$zenity_text $zenity_more_text"; then
			return 
		fi
	else 
		local answer
		echo 'LAMW Manager v0.4.2 downgraded Lazarus to 2.0.12'
		echo "Do you want to repair lazarus project files (*.lpi) from your $CURRENT_LAMW_WORKSPACE y/n ?"
		read -n 1 answer 
		echo "${zenity_more_text/\\n/}" 
		[[ "${answer,,}" != 'y' ]] && return 

	fi

	cd  "$CURRENT_LAMW_WORKSPACE"

	for project in $(find $PWD -name *.lpi); do
		[[ "$project" =~ $backup_pattern ]] && continue;
		DowngradleLazarusLpi "$project"
	done

}

generateSDKToolsCommands(){
	local cmdline_path="cmdline-tools/latest/bin"
	if [ -e $ANDROID_SDK_ROOT/$cmdline_path ]; then 
		cd 	$ANDROID_SDK_ROOT/$cmdline_path
	else 
		cmdline_path="tools/bin"
		cd $ANDROID_SDK_ROOT/$cmdline_path
	fi
		
	for i in *; do
		eval "function $i { \"\$ANDROID_SDK_ROOT/$cmdline_path/$i\" \$@ ; }"
		export -f $i
	done
}

latestproject(){
	local node_project="//CONFIG/EnvironmentOptions/AutoSave/@LastSavedProjectFile"
	local lamw4linuxcfg_path="$LAMW_IDE_HOME_CFG/environmentoptions.xml"
	local projectpath="$(xmlstarlet sel -t -v  $node_project  $lamw4linuxcfg_path)"
	local projectdir="$(dirname "$projectpath")"

	if [ "$projectpath" = "" ] || [ ! -e "$projectdir" ]; then
		return
	fi

	cd "$projectdir"
	if grep -qm1 LAMW $projectpath; then 
		cd ..
	fi
}


export -f $LAM4LINUX_TERMINAL_FUNCTIONS

if [[ "$-" =~ (x) ]]; then
	_EXTRA_ARGS+=" -x"
elif [[ "$-" =~ (v) ]]; then
	_EXTRA_ARGS+=" -v"
fi
 
echo "[1mWelcome LAMW4Linux Terminal!![0m"
echo "Here you can run FPC command line tools, Lazarus and LAMW scripts"

update-lamw-manager &


generateSDKToolsCommands
cd $CURRENT_LAMW_WORKSPACE
exec bash  $_EXTRA_ARGS $@