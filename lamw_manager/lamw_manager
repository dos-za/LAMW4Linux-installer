#!/usr/bin/env bash
#-------------------------------------------------------------------------------------------------#
#Universidade federal de Mato Grosso (Alma Mater)
#Course: Science Computer
#Version: 0.6.3
#Date: 02/04/2024
#Description: The "lamw-install.sh" is part of the core of LAMW Manager. This script configures the development environment for LAMW
#-------------------------------------------------------------------------------------------------#

# Verifica condicoes de inicializacao

#Get Directory of LAMW Manager Core
if [ -e "$PWD/lamw_manager" ] && [ ! -d "$PWD/lamw_manager" ]; then
	export LAMW_MGR_CORE="$PWD"
else
	export LAMW_MGR_CORE="$(realpath $(dirname $0))"
	[ $? != 0 ] && export LAMW_MGR_CORE="${0/%\/lamw_manager}" 
fi

LAMW_MANAGER_MODULES_PATH=$LAMW_MGR_CORE/core

source /etc/os-release

#importando modulos de headers 
source "$LAMW_MANAGER_MODULES_PATH/headers/.index"
source "$LAMW_MANAGER_MODULES_PATH/installer/services.sh"
source "$LAMW_MANAGER_MODULES_PATH/installer/distro-overrides.sh"
source "$LAMW_MANAGER_MODULES_PATH/installer/configure.sh"
source "$LAMW_MANAGER_MODULES_PATH/installer/installer.sh"
source "$LAMW_MANAGER_MODULES_PATH/installer/preinstall.sh"
source "$LAMW_MANAGER_MODULES_PATH/installer/postinstall.sh"
source "$LAMW_MANAGER_MODULES_PATH/settings-editor/lamw-settings-editor.sh"
source "$LAMW_MANAGER_MODULES_PATH/cross-builder/cross-builder.sh"
source "$LAMW_MANAGER_MODULES_PATH/components/progress-bar.sh"



#Parameters are useful for understanding script operation


actions(){

	case "$1" in
	"version")
		printf "${LAMW_INSTALL_WELCOME[*]}"
		printf "Linux supported\n${LAMW_LINUX_SPP[*]}"
	;;

	"uninstall")
		LAMW_MANAGER_ENV+=(UNINSTALL_LAMW=1)
		RunAsAdmin 1
	;;

	"--sdkmanager")
		getStatusInstalation && mainInstall
		echo "Please wait, starting ${NEGRITO}Android SDK Manager Command Line ${NORMAL} ..."
		getAndroidAPIS  ${ARGS[@]:1}
	;;

	"--update-lamw")
		if getStatusInstalation; then
			mainInstall

		else
			Repair
			if ! isUpdateLAMWDeps ; then
				echo "${VERMELHO}Warning:There are updates for LAMW4Linux${NORMAL}"
				echo "run ${NEGRITO}./lamw_manager to update:${NORMAL}"
			fi
			checkProxyStatus;
			echo "Updating LAMW";
			getLAMWFramework;
			sleep 1;
			BuildLazarusIDE "1"
			
		fi
	;;

	"--reinstall")
		printf "Please wait ...\n"
		mainInstall
	;;

	"--reset")
		printf "Please wait ...\n"
		getStatusInstalation
		RunAsAdmin 2
		mainInstall
	;;
	"--reset-aapis")
		if ! getStatusInstalation; then
			resetAndroidAPIS
		else
			mainInstall
		fi
	;;

	"" | "--use_proxy" |"--minimal")
		startImplicitAction
		autoStartLAMW4Linux
	;;
	"--help"| "help") 
		lamw_manager_help
	;;

	"build-lazarus")
		if getStatusInstalation; then 
			testConnectionInternet 1>&2
			mainInstall
		else
			FORCE_LAZARUS_CLEAN_BUILD=1
			Repair 
			BuildLazarusIDE
		fi
	;;

	"get-root-lamw")
		echo "$ROOT_LAMW"
	;;

	"get-status")
		if getStatusInstalation; then
			exit 1
		fi 
		exit 0
	;;
	
	"--avdmanager")
		getStatusInstalation && mainInstall
		runAvdManager ${ARGS[@]:1}

	;;
	*)
		printf "${VERMELHO}Invalid argument!${NORMAL}\n$(lamw_manager_help)" >&2
		exit 1
	;;

	esac

}

main(){
	initialConfig
	actions ${ARGS[@]}
	deleteLamwManagerLock
	exit $EXIT_STATUS
}

main